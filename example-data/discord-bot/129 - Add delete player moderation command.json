{"RepoName":"discord-bot","RepoDescription":"A discord bot for the Wise Old Man project.","RepoUrl":"https://api.github.com/repos/wise-old-man/discord-bot","RepoReadmeFilename":"README.md","RepoReadmeContent":"\u003Cdiv align = \u0022center\u0022\u003E\n\n![Wise Old Man Discord Bot](https://user-images.githubusercontent.com/3278148/86964409-ec5f2880-c15d-11ea-84bf-8b484d60afd2.png)\n\n\uD83D\uDD17 [www.bot.wiseoldman.net](https://bot.wiseoldman.net/)\n\nTrack your Old School Runescape clan\u2019s progress from your own Discord server.\n\n![MIT license](https://img.shields.io/github/license/wise-old-man/wise-old-man) ![Bot repo](https://img.shields.io/badge/wise%20old%20man-discord%20bot-blue)\n\nThe Wise Old Man is an app that tracks your Old School Runescape player progress. Built on top of the OSRS hiscores, it allows you to keep track of your gains, participate in group competitions, collect achievements and much more.\n\nThis repository is an extention of the core project, a Discord Bot to server as a secondary user interface.\n\n[Website](https://bot.wiseoldman.net/) |\n[Discord](https://discord.gg/Ky5vNt2) |\n[Patreon](https://www.patreon.com/wiseoldman)\n\n\u003C/div\u003E\n\n\u003Cbr /\u003E\n\n## \uD83D\uDC6A Related projects\n\n- [Core Repository (API/Webapp)](https://github.com/wise-old-man/wise-old-man)\n- [Discord Bot Landing Page](https://github.com/wise-old-man/bot.wiseoldman.net)\n\n\u003Cbr /\u003E\n\n## \uD83D\uDCDA Technologies\n\nThis project is built using Discord.js, Sequelize and Express.\n\n\u003Cbr /\u003E\n\n## \uD83D\uDCAC Suggestions and bugs\n\nHave a suggestion or a bug to report? [Click here to create a issue](https://github.com/wise-old-man/discord-bot/issues)\n\nHave something else you\u0027d like to discuss? [Join us on discord](https://discord.gg/Ky5vNt2)\n\n\u003Cbr /\u003E\n","Filenames":[".dockerignore",".eslintignore",".eslintrc",".gitattributes",".github/workflows/deploy.yml",".prettierrc",".sequelizerc","Dockerfile","LICENSE","README.md","docker-compose.yml","package.json","src/api/handler.ts","src/api/index.ts","src/api/modules/competitions.ts","src/api/modules/groups.ts","src/api/modules/names.ts","src/api/modules/players.ts","src/api/modules/snapshots.ts","src/api/types.ts","src/api/utils.ts","src/bot.ts","src/commands/CommandError.ts","src/commands/CustomCommands.ts","src/commands/instances/config/ConfigChannelPreference.ts","src/commands/instances/config/ConfigDefaultChannel.ts","src/commands/instances/config/ConfigGroup.ts","src/commands/instances/config/ConfigPrefix.ts","src/commands/instances/general/Help.ts","src/commands/instances/group/GroupCompetition.ts","src/commands/instances/group/GroupCompetitions.ts","src/commands/instances/group/GroupDetails.ts","src/commands/instances/group/GroupGained.ts","src/commands/instances/group/GroupHiscores.ts","src/commands/instances/group/GroupMembers.ts","src/commands/instances/group/GroupRecords.ts","src/commands/instances/index.ts","src/commands/instances/moderation/ApproveNameChange.ts","src/commands/instances/moderation/DenyNameChange.ts","src/commands/instances/moderation/ResetCompetitionCode.ts","src/commands/instances/moderation/ResetGroupCode.ts","src/commands/instances/moderation/ReviewNameChange.ts","src/commands/instances/moderation/VerifyGroup.ts","src/commands/instances/player/PlayerAchievements.ts","src/commands/instances/player/PlayerActivities.ts","src/commands/instances/player/PlayerBosses.ts","src/commands/instances/player/PlayerEfficiency.ts","src/commands/instances/player/PlayerGained.ts","src/commands/instances/player/PlayerSetFlag.ts","src/commands/instances/player/PlayerSetUsername.ts","src/commands/instances/player/PlayerStats.ts","src/commands/instances/player/UpdatePlayer.ts","src/commands/parser.ts","src/commands/router.ts","src/config.ts","src/database/config.ts","src/database/index.ts","src/database/migrations/20200616003302-create-guild-configs-table.ts","src/database/migrations/20200709182151-add-player-alias.ts","src/database/migrations/20210306142806-create-channel-preferences-table.ts","src/database/models/Alias.ts","src/database/models/ChannelPreference.ts","src/database/models/Server.ts","src/database/services/alias.ts","src/database/services/channelPreferences.ts","src/database/services/server.ts","src/events/instances/CompetitionCreated.ts","src/events/instances/CompetitionEnded.ts","src/events/instances/CompetitionEnding.ts","src/events/instances/CompetitionStarted.ts","src/events/instances/CompetitionStarting.ts","src/events/instances/MemberAchievements.ts","src/events/instances/MemberHardcoreDied.ts","src/events/instances/MemberNameChanged.ts","src/events/instances/MembersJoined.ts","src/events/instances/MembersLeft.ts","src/events/instances/index.ts","src/events/router.ts","src/index.ts","src/types.ts","src/utils/broadcast.ts","src/utils/dates.ts","src/utils/discord.ts","src/utils/flags.ts","src/utils/index.ts","src/utils/levels.ts","src/utils/metrics.ts","src/utils/rendering.ts","src/utils/strings.ts","tsconfig.json","wait-for-it.sh"],"PrNumber":129,"PrTitle":"Add delete player moderation command","PrBody":"Adds new bot moderation command that allows mods and admins to delete players (and all their data)","PrModifiedFiles":[{"Status":"modified","FileName":"src/api/modules/players.ts","Contents":"import api from \u0027../handler\u0027;\nimport { Player, PlayerAchievement, PlayerGains, PlayerRecord } from \u0027../types\u0027;\nimport { convertDates } from \u0027../utils\u0027;\n\n/*\n * Fetch the player details from the API.\n */\nasync function fetchPlayer(username: string): Promise\u003CPlayer\u003E {\n  const URL = \u0060/players/username/${username}\u0060;\n  const { data } = await api.get(URL);\n\n  // Convert date strings into date instances\n  convertDates(data, [\u0027registeredAt\u0027, \u0027updatedAt\u0027, \u0027lastImportedAt\u0027]);\n  convertDates(data.latestSnapshot, [\u0027createdAt\u0027, \u0027importedAt\u0027]);\n\n  return data;\n}\n\n/**\n * Send an API request attempting to update a given username.\n */\nasync function updatePlayer(username: string): Promise\u003CPlayer\u003E {\n  const URL = \u0060/players/track\u0060;\n  const { data } = await api.post(URL, { username });\n\n  // Convert date strings into date instances\n  convertDates(data, [\u0027registeredAt\u0027, \u0027updatedAt\u0027, \u0027lastImportedAt\u0027]);\n  convertDates(data.latestSnapshot, [\u0027createdAt\u0027, \u0027importedAt\u0027]);\n\n  return data;\n}\n\n/**\n * Send an API request attempting to update a player\u0027s country\n */\nasync function updateCountry(username: string, country: string): Promise\u003C{ message: string }\u003E {\n  const URL = \u0060/players/username/${username}/country\u0060;\n  const adminPassword = process.env.ADMIN_PASSWORD;\n\n  const { data } = await api.put(URL, { country, adminPassword });\n\n  return data;\n}\n\n/**\n * Fetch the player\u0027s gains from the API.\n */\nasync function fetchPlayerGains(username: string, period: string): Promise\u003CPlayerGains\u003E {\n  const URL = \u0060/players/username/${username}/gained\u0060;\n  const { data } = await api.get(URL, { params: { period } });\n\n  // Convert date strings into date instances\n  convertDates(data, [\u0027startsAt\u0027, \u0027endsAt\u0027]);\n\n  return data;\n}\n\n/**\n * Fetch the player\u0027s records from the API.\n */\nasync function fetchPlayerRecords(username: string, metric: string): Promise\u003CPlayerRecord[]\u003E {\n  const URL = \u0060/players/username/${username}/records\u0060;\n  const { data } = await api.get(URL, { params: { metric } });\n\n  // Convert date strings into date instances\n  convertDates(data, [\u0027updatedAt\u0027]);\n\n  return data;\n}\n\n/**\n * Fetch the player\u0027s achievements from the API.\n */\nasync function fetchPlayerAchievements(username: string, limit = 5): Promise\u003CPlayerAchievement[]\u003E {\n  const URL = \u0060/players/username/${username}/achievements\u0060;\n  const { data } = await api.get(URL);\n\n  if (!data) {\n    return [];\n  }\n\n  const achievements: PlayerAchievement[] = data;\n\n  // Convert date strings into date instances\n  convertDates(achievements, [\u0027createdAt\u0027]);\n\n  return achievements.sort((a, b) =\u003E b.createdAt.getTime() - a.createdAt.getTime()).slice(0, limit);\n}\n\nexport {\n  fetchPlayer,\n  updatePlayer,\n  updateCountry,\n  fetchPlayerGains,\n  fetchPlayerRecords,\n  fetchPlayerAchievements\n};\n"},{"Status":"modified","FileName":"src/commands/instances/index.ts","Contents":"import { Command } from \u0027../../types\u0027;\nimport ConfigChannelPreference from \u0027./config/ConfigChannelPreference\u0027;\nimport ConfigDefaultChannel from \u0027./config/ConfigDefaultChannel\u0027;\nimport ConfigGroup from \u0027./config/ConfigGroup\u0027;\nimport ConfigPrefix from \u0027./config/ConfigPrefix\u0027;\nimport HelpCommand from \u0027./general/Help\u0027;\nimport GroupCompetitionCommand from \u0027./group/GroupCompetition\u0027;\nimport GroupCompetitionsCommand from \u0027./group/GroupCompetitions\u0027;\nimport GroupDetailsCommand from \u0027./group/GroupDetails\u0027;\nimport GroupGainedCommand from \u0027./group/GroupGained\u0027;\nimport GroupHiscoresCommand from \u0027./group/GroupHiscores\u0027;\nimport GroupMembersCommand from \u0027./group/GroupMembers\u0027;\nimport GroupRecordsCommand from \u0027./group/GroupRecords\u0027;\nimport ApproveNameChange from \u0027./moderation/ApproveNameChange\u0027;\nimport DenyNameChange from \u0027./moderation/DenyNameChange\u0027;\nimport ResetCompetitionCode from \u0027./moderation/ResetCompetitionCode\u0027;\nimport ResetGroupCode from \u0027./moderation/ResetGroupCode\u0027;\nimport ReviewNameChange from \u0027./moderation/ReviewNameChange\u0027;\nimport VerifyGroup from \u0027./moderation/VerifyGroup\u0027;\nimport PlayerAchievements from \u0027./player/PlayerAchievements\u0027;\nimport PlayerActivitiesCommand from \u0027./player/PlayerActivities\u0027;\nimport PlayerBossesCommand from \u0027./player/PlayerBosses\u0027;\nimport PlayerEfficiencyCommand from \u0027./player/PlayerEfficiency\u0027;\nimport PlayerGainedCommand from \u0027./player/PlayerGained\u0027;\nimport PlayerSetFlag from \u0027./player/PlayerSetFlag\u0027;\nimport PlayerSetUsername from \u0027./player/PlayerSetUsername\u0027;\nimport PlayerStatsCommand from \u0027./player/PlayerStats\u0027;\nimport PlayerUpdateCommand from \u0027./player/UpdatePlayer\u0027;\n\nconst commands: Command[] = [\n  // general commands\n  HelpCommand,\n\n  // moderation commands\n  ResetGroupCode,\n  ResetCompetitionCode,\n  VerifyGroup,\n  ReviewNameChange,\n  ApproveNameChange,\n  DenyNameChange,\n\n  // player commands\n  PlayerStatsCommand,\n  PlayerBossesCommand,\n  PlayerActivitiesCommand,\n  PlayerAchievements,\n  PlayerUpdateCommand,\n  PlayerGainedCommand,\n  PlayerEfficiencyCommand,\n  PlayerSetUsername,\n  PlayerSetFlag,\n\n  // group commands\n  GroupDetailsCommand,\n  GroupMembersCommand,\n  GroupHiscoresCommand,\n  GroupRecordsCommand,\n  GroupGainedCommand,\n  GroupCompetitionCommand,\n  GroupCompetitionsCommand,\n\n  // config commands\n  ConfigPrefix,\n  ConfigDefaultChannel,\n  ConfigChannelPreference,\n  ConfigGroup\n];\n\nexport default commands;\n"},{"Status":"added","FileName":"src/commands/instances/moderation/DeletePlayer.ts","Contents":null}],"GitDiff":"diff --git a/src/api/modules/players.ts b/src/api/modules/players.ts\n--- a/src/api/modules/players.ts\n\u002B\u002B\u002B b/src/api/modules/players.ts\n@@ -30,6 \u002B30,18 @@ async function updatePlayer(username: string): Promise\u003CPlayer\u003E {\n   return data;\n }\n \n\u002B/**\n\u002B * Send an API request attempting to delete a player (and all its data)\n\u002B */\n\u002Basync function deletePlayer(username: string): Promise\u003C{ message: string }\u003E {\n\u002B  const URL = \u0060/players/username/${username}\u0060;\n\u002B  const adminPassword = process.env.ADMIN_PASSWORD;\n\u002B\n\u002B  const { data } = await api.delete(URL, { data: { adminPassword } });\n\u002B\n\u002B  return data;\n\u002B}\n\u002B\n /**\n  * Send an API request attempting to update a player\u0027s country\n  */\n@@ -93,5 \u002B105,6 @@ export {\n   updateCountry,\n   fetchPlayerGains,\n   fetchPlayerRecords,\n-  fetchPlayerAchievements\n\u002B  fetchPlayerAchievements,\n\u002B  deletePlayer\n };\ndiff --git a/src/commands/instances/index.ts b/src/commands/instances/index.ts\n--- a/src/commands/instances/index.ts\n\u002B\u002B\u002B b/src/commands/instances/index.ts\n@@ -17,6 \u002B17,7 @@ import ResetCompetitionCode from \u0027./moderation/ResetCompetitionCode\u0027;\n import ResetGroupCode from \u0027./moderation/ResetGroupCode\u0027;\n import ReviewNameChange from \u0027./moderation/ReviewNameChange\u0027;\n import VerifyGroup from \u0027./moderation/VerifyGroup\u0027;\n\u002Bimport DeletePlayer from \u0027./moderation/DeletePlayer\u0027;\n import PlayerAchievements from \u0027./player/PlayerAchievements\u0027;\n import PlayerActivitiesCommand from \u0027./player/PlayerActivities\u0027;\n import PlayerBossesCommand from \u0027./player/PlayerBosses\u0027;\n@@ -38,6 \u002B39,7 @@ const commands: Command[] = [\n   ReviewNameChange,\n   ApproveNameChange,\n   DenyNameChange,\n\u002B  DeletePlayer,\n \n   // player commands\n   PlayerStatsCommand,\ndiff --git a/src/commands/instances/moderation/DeletePlayer.ts b/src/commands/instances/moderation/DeletePlayer.ts\nnew file mode 100644\n--- /dev/null\n\u002B\u002B\u002B b/src/commands/instances/moderation/DeletePlayer.ts\n@@ -0,0 \u002B1,48 @@\n\u002Bimport { MessageEmbed } from \u0027discord.js\u0027;\n\u002Bimport { deletePlayer } from \u0027../../../api/modules/players\u0027;\n\u002Bimport config from \u0027../../../config\u0027;\n\u002Bimport { Command, ParsedMessage } from \u0027../../../types\u0027;\n\u002Bimport { getEmoji, hasModeratorRole } from \u0027../../../utils\u0027;\n\u002Bimport CommandError from \u0027../../CommandError\u0027;\n\u002B\n\u002Bclass DeletePlayer implements Command {\n\u002B  name: string;\n\u002B  template: string;\n\u002B\n\u002B  constructor() {\n\u002B    this.name = \u0027Delete a player and all its data.\u0027;\n\u002B    this.template = \u0027!delete-player {username}\u0027;\n\u002B  }\n\u002B\n\u002B  activated(message: ParsedMessage) {\n\u002B    return (\n\u002B      message.command === \u0027delete-player\u0027 \u0026\u0026\n\u002B      message.args.length \u003E= 1 \u0026\u0026\n\u002B      message.sourceMessage?.guild?.id === config.discord.guildId\n\u002B    );\n\u002B  }\n\u002B\n\u002B  async execute(message: ParsedMessage) {\n\u002B    if (!hasModeratorRole(message.sourceMessage.member)) {\n\u002B      message.respond(\u0027Nice try. This command is reserved for Moderators and Admins.\u0027);\n\u002B      return;\n\u002B    }\n\u002B\n\u002B    const username = message.args.join(\u0027 \u0027);\n\u002B\n\u002B    try {\n\u002B      await deletePlayer(username);\n\u002B\n\u002B      // Respond on the WOM discord chat with a success status\n\u002B      const response = new MessageEmbed()\n\u002B        .setColor(config.visuals.green)\n\u002B        .setDescription(\u0060${getEmoji(\u0027success\u0027)} \\\u0060${username}\\\u0060 has been successfully deleted!\u0060);\n\u002B\n\u002B      message.respond(response);\n\u002B    } catch (error) {\n\u002B      throw new CommandError(\u0027Failed to delete player.\u0027);\n\u002B    }\n\u002B  }\n\u002B}\n\u002B\n\u002Bexport default new DeletePlayer();\n"}